# Generated by Steven Hepting
# To re-generate run:
#    ./generate_ruletype_docs.sh
# Buck version: buck version 23d5c09ab5491bd03fab3bf60cf15f6f87547fd6
def android_aar (
    manifest_skeleton,
    name,
    abi_generation_mode = None,
    annotation_processing_tool = None,
    annotation_processor_deps = None,
    annotation_processor_only = None,
    annotation_processor_params = None,
    annotation_processors = None,
    build_config_values = None,
    compatible_with = None,
    compile_against = None,
    compiler = None,
    compiler_class_name = None,
    default_target_platform = None,
    deps = None,
    deps_query = None,
    enable_relinker = None,
    exported_deps = None,
    exported_provided_deps = None,
    extra_arguments = None,
    extra_kotlinc_arguments = None,
    final_r_name = None,
    friend_paths = None,
    include_build_config_class = None,
    java_plugin_params = None,
    java_version = None,
    javac = None,
    javac_jar = None,
    kapt_ap_options = None,
    kotlinc_plugins = None,
    labels = None,
    language = None,
    licenses = None,
    manifest = None,
    manifest_file = None,
    maven_coords = None,
    maven_pom_template = None,
    never_mark_as_unused_dependency = None,
    on_unused_dependencies = None,
    plugins = None,
    postprocess_classes_commands = None,
    proguard_config = None,
    provided_deps = None,
    provided_deps_query = None,
    remove_classes = None,
    required_for_source_only_abi = None,
    resource_union_package = None,
    resources = None,
    resources_root = None,
    runtime_deps = None,
    skip_non_union_r_dot_java = None,
    source = None,
    source_abi_verification_mode = None,
    source_only_abi_deps = None,
    srcs = None,
    target = None,
    tests = None,
    unbundled_resources_root = None,
):
    ...
def android_app_modularity (
    name,
    application_module_blacklist = None,
    application_module_configs = None,
    application_module_dependencies = None,
    compatible_with = None,
    default_target_platform = None,
    deps = None,
    labels = None,
    licenses = None,
    no_dx = None,
    should_include_classes = None,
    should_include_libraries = None,
):
    ...
def android_binary (
    keystore,
    name,
    aapt2_locale_filtering = None,
    aapt_mode = None,
    additional_aapt_params = None,
    allow_r_dot_java_in_secondary_dex = None,
    allowed_duplicate_resource_types = None,
    android_app_modularity_result = None,
    android_sdk_proguard_config = None,
    application_module_blacklist = None,
    application_module_configs = None,
    application_module_dependencies = None,
    application_module_targets = None,
    application_modules_with_resources = None,
    asset_compression_algorithm = None,
    banned_duplicate_resource_types = None,
    build_config_values = None,
    build_config_values_file = None,
    build_string_source_map = None,
    compatible_with = None,
    compress_asset_libraries = None,
    cpu_filters = None,
    default_target_platform = None,
    deps = None,
    dex_compression = None,
    dex_group_lib_limit = None,
    dex_reorder_data_dump_file = None,
    dex_reorder_tool_file = None,
    dex_tool = None,
    disable_pre_dex = None,
    duplicate_resource_behavior = None,
    duplicate_resource_whitelist = None,
    enable_relinker = None,
    exopackage = None,
    exopackage_modes = None,
    extra_filtered_resources = None,
    ignore_aapt_proguard_config = None,
    includes_vector_drawables = None,
    is_cacheable = None,
    keep_resource_pattern = None,
    labels = None,
    licenses = None,
    linear_alloc_hard_limit = None,
    locales = None,
    localized_string_file_name = None,
    manifest = None,
    manifest_entries = None,
    manifest_skeleton = None,
    minimize_primary_dex_size = None,
    module_manifest_skeleton = None,
    native_library_merge_code_generator = None,
    native_library_merge_glue = None,
    native_library_merge_localized_symbols = None,
    native_library_merge_map = None,
    native_library_proguard_config_generator = None,
    no_auto_add_overlay_resources = None,
    no_auto_version_resources = None,
    no_dx = None,
    no_version_transitions_resources = None,
    optimization_passes = None,
    package_asset_libraries = None,
    package_type = None,
    post_filter_resources_cmd = None,
    preprocess_java_classes_bash = None,
    preprocess_java_classes_deps = None,
    primary_dex_classes_file = None,
    primary_dex_patterns = None,
    primary_dex_scenario_file = None,
    primary_dex_scenario_overflow_allowed = None,
    proguard_config = None,
    proguard_jvm_args = None,
    redex = None,
    redex_config = None,
    redex_extra_args = None,
    relinker_whitelist = None,
    reorder_classes_intra_dex = None,
    resource_compression = None,
    resource_filter = None,
    resource_union_package = None,
    secondary_dex_head_classes_file = None,
    secondary_dex_tail_classes_file = None,
    skip_crunch_pngs = None,
    skip_proguard = None,
    tests = None,
    trim_resource_ids = None,
    use_split_dex = None,
    xz_compression_level = None,
):
    ...
def android_build_config (
    name,
    package,
    compatible_with = None,
    default_target_platform = None,
    labels = None,
    licenses = None,
    values = None,
    values_file = None,
):
    ...
def android_bundle (
    keystore,
    name,
    aapt2_locale_filtering = None,
    aapt_mode = None,
    additional_aapt_params = None,
    allow_r_dot_java_in_secondary_dex = None,
    allowed_duplicate_resource_types = None,
    android_app_modularity_result = None,
    android_sdk_proguard_config = None,
    application_module_blacklist = None,
    application_module_configs = None,
    application_module_dependencies = None,
    application_module_targets = None,
    application_modules_with_resources = None,
    asset_compression_algorithm = None,
    banned_duplicate_resource_types = None,
    build_config_values = None,
    build_config_values_file = None,
    build_string_source_map = None,
    bundle_config_file = None,
    compatible_with = None,
    compress_asset_libraries = None,
    cpu_filters = None,
    default_target_platform = None,
    deps = None,
    dex_compression = None,
    dex_group_lib_limit = None,
    dex_reorder_data_dump_file = None,
    dex_reorder_tool_file = None,
    dex_tool = None,
    disable_pre_dex = None,
    duplicate_resource_behavior = None,
    duplicate_resource_whitelist = None,
    enable_relinker = None,
    exopackage = None,
    exopackage_modes = None,
    extra_filtered_resources = None,
    ignore_aapt_proguard_config = None,
    includes_vector_drawables = None,
    is_cacheable = None,
    keep_resource_pattern = None,
    labels = None,
    licenses = None,
    linear_alloc_hard_limit = None,
    locales = None,
    localized_string_file_name = None,
    manifest = None,
    manifest_entries = None,
    manifest_skeleton = None,
    minimize_primary_dex_size = None,
    module_manifest_skeleton = None,
    native_library_merge_code_generator = None,
    native_library_merge_glue = None,
    native_library_merge_localized_symbols = None,
    native_library_merge_map = None,
    native_library_proguard_config_generator = None,
    no_auto_add_overlay_resources = None,
    no_auto_version_resources = None,
    no_dx = None,
    no_version_transitions_resources = None,
    optimization_passes = None,
    package_asset_libraries = None,
    package_type = None,
    post_filter_resources_cmd = None,
    preprocess_java_classes_bash = None,
    preprocess_java_classes_deps = None,
    primary_dex_classes_file = None,
    primary_dex_patterns = None,
    primary_dex_scenario_file = None,
    primary_dex_scenario_overflow_allowed = None,
    proguard_config = None,
    proguard_jvm_args = None,
    redex = None,
    redex_config = None,
    redex_extra_args = None,
    relinker_whitelist = None,
    reorder_classes_intra_dex = None,
    resource_compression = None,
    resource_filter = None,
    resource_union_package = None,
    secondary_dex_head_classes_file = None,
    secondary_dex_tail_classes_file = None,
    skip_crunch_pngs = None,
    skip_proguard = None,
    tests = None,
    trim_resource_ids = None,
    use_split_dex = None,
    xz_compression_level = None,
):
    ...
def android_instrumentation_apk (
    apk,
    name,
    aapt_mode = None,
    compatible_with = None,
    default_target_platform = None,
    deps = None,
    dex_tool = None,
    includes_vector_drawables = None,
    labels = None,
    licenses = None,
    manifest = None,
    manifest_skeleton = None,
):
    ...
def android_instrumentation_test (
    apk,
    name,
    compatible_with = None,
    contacts = None,
    default_target_platform = None,
    labels = None,
    licenses = None,
    test_rule_timeout_ms = None,
):
    ...
def android_library (
    name,
    abi_generation_mode = None,
    annotation_processing_tool = None,
    annotation_processor_deps = None,
    annotation_processor_only = None,
    annotation_processor_params = None,
    annotation_processors = None,
    compatible_with = None,
    compile_against = None,
    compiler = None,
    compiler_class_name = None,
    default_target_platform = None,
    deps = None,
    deps_query = None,
    exported_deps = None,
    exported_provided_deps = None,
    extra_arguments = None,
    extra_kotlinc_arguments = None,
    final_r_name = None,
    friend_paths = None,
    java_plugin_params = None,
    java_version = None,
    javac = None,
    javac_jar = None,
    kapt_ap_options = None,
    kotlinc_plugins = None,
    labels = None,
    language = None,
    licenses = None,
    manifest = None,
    manifest_file = None,
    maven_coords = None,
    maven_pom_template = None,
    never_mark_as_unused_dependency = None,
    on_unused_dependencies = None,
    plugins = None,
    postprocess_classes_commands = None,
    proguard_config = None,
    provided_deps = None,
    provided_deps_query = None,
    remove_classes = None,
    required_for_source_only_abi = None,
    resource_union_package = None,
    resources = None,
    resources_root = None,
    runtime_deps = None,
    skip_non_union_r_dot_java = None,
    source = None,
    source_abi_verification_mode = None,
    source_only_abi_deps = None,
    srcs = None,
    target = None,
    tests = None,
    unbundled_resources_root = None,
):
    ...
def android_manifest (
    name,
    skeleton,
    compatible_with = None,
    default_target_platform = None,
    deps = None,
    labels = None,
    licenses = None,
):
    ...
def android_platform (
    base_platform,
    name,
    native_platforms = None,
):
    ...
def android_prebuilt_aar (
    aar,
    name,
    compatible_with = None,
    default_target_platform = None,
    deps = None,
    javadoc_url = None,
    labels = None,
    licenses = None,
    maven_coords = None,
    required_for_source_only_abi = None,
    source_jar = None,
    use_system_library_loader = None,
):
    ...
def android_resource (
    name,
    assets = None,
    compatible_with = None,
    default_target_platform = None,
    deps = None,
    has_whitelisted_strings = None,
    labels = None,
    licenses = None,
    manifest = None,
    package = None,
    project_assets = None,
    project_res = None,
    res = None,
    resource_union = None,
):
    ...
def apk_genrule (
    apk,
    name,
    bash = None,
    cacheable = None,
    cmd = None,
    cmd_exe = None,
    compatible_with = None,
    default_target_platform = None,
    enable_sandbox = None,
    environment_expansion_separator = None,
    is_cacheable = None,
    labels = None,
    licenses = None,
    need_android_tools = None,
    out = None,
    remote = None,
    srcs = None,
    tests = None,
):
    ...
def apple_asset_catalog (
    name,
    app_icon = None,
    compatible_with = None,
    default_target_platform = None,
    dirs = None,
    labels = None,
    launch_image = None,
    licenses = None,
):
    ...
def apple_binary (
    name,
    bridging_header = None,
    can_be_asset = None,
    compatible_with = None,
    compiler_flags = None,
    configs = None,
    contacts = None,
    cxx_runtime_type = None,
    default_platform = None,
    default_target_platform = None,
    defaults = None,
    deps = None,
    entitlements_file = None,
    executable_name = None,
    exported_deps = None,
    exported_header_style = None,
    exported_headers = None,
    exported_lang_platform_preprocessor_flags = None,
    exported_lang_preprocessor_flags = None,
    exported_linker_flags = None,
    exported_platform_deps = None,
    exported_platform_headers = None,
    exported_platform_linker_flags = None,
    exported_platform_preprocessor_flags = None,
    exported_post_linker_flags = None,
    exported_post_platform_linker_flags = None,
    exported_preprocessor_flags = None,
    extra_xcode_files = None,
    extra_xcode_sources = None,
    fat_lto = None,
    force_static = None,
    frameworks = None,
    header_namespace = None,
    header_path_prefix = None,
    headers = None,
    include_directories = None,
    info_plist = None,
    info_plist_substitutions = None,
    labels = None,
    lang_compiler_flags = None,
    lang_platform_compiler_flags = None,
    lang_platform_preprocessor_flags = None,
    lang_preprocessor_flags = None,
    libraries = None,
    licenses = None,
    link_group = None,
    link_group_map = None,
    link_style = None,
    link_whole = None,
    linker_extra_outputs = None,
    linker_flags = None,
    modular = None,
    module_name = None,
    modulemap_mode = None,
    platform_compiler_flags = None,
    platform_deps = None,
    platform_headers = None,
    platform_linker_flags = None,
    platform_preprocessor_flags = None,
    platform_srcs = None,
    post_linker_flags = None,
    post_platform_linker_flags = None,
    precompiled_header = None,
    preferred_linkage = None,
    prefix_header = None,
    preprocessor_flags = None,
    public_include_directories = None,
    public_system_include_directories = None,
    raw_headers = None,
    reexport_all_header_dependencies = None,
    soname = None,
    srcs = None,
    static_library_basename = None,
    supported_platforms_regex = None,
    supports_merged_linking = None,
    swift_compiler_flags = None,
    swift_version = None,
    target_sdk_version = None,
    tests = None,
    thin_lto = None,
    xcode_private_headers_symlinks = None,
    xcode_public_headers_symlinks = None,
):
    ...
def apple_bundle (
    extension,
    info_plist,
    name,
    asset_catalogs_compilation_options = None,
    binary = None,
    codesign_flags = None,
    codesign_identity = None,
    compatible_with = None,
    contacts = None,
    default_platform = None,
    default_target_platform = None,
    deps = None,
    ibtool_flags = None,
    ibtool_module_flag = None,
    info_plist_substitutions = None,
    labels = None,
    licenses = None,
    platform_binary = None,
    product_name = None,
    resource_group = None,
    resource_group_map = None,
    tests = None,
    xcode_product_type = None,
):
    ...
def apple_library (
    name,
    bridging_header = None,
    can_be_asset = None,
    compatible_with = None,
    compiler_flags = None,
    configs = None,
    contacts = None,
    cxx_runtime_type = None,
    default_platform = None,
    default_target_platform = None,
    defaults = None,
    deps = None,
    executable_name = None,
    exported_deps = None,
    exported_header_style = None,
    exported_headers = None,
    exported_lang_platform_preprocessor_flags = None,
    exported_lang_preprocessor_flags = None,
    exported_linker_flags = None,
    exported_platform_deps = None,
    exported_platform_headers = None,
    exported_platform_linker_flags = None,
    exported_platform_preprocessor_flags = None,
    exported_post_linker_flags = None,
    exported_post_platform_linker_flags = None,
    exported_preprocessor_flags = None,
    extra_xcode_files = None,
    extra_xcode_sources = None,
    fat_lto = None,
    force_static = None,
    frameworks = None,
    header_namespace = None,
    header_path_prefix = None,
    headers = None,
    include_directories = None,
    info_plist = None,
    info_plist_substitutions = None,
    labels = None,
    lang_compiler_flags = None,
    lang_platform_compiler_flags = None,
    lang_platform_preprocessor_flags = None,
    lang_preprocessor_flags = None,
    libraries = None,
    licenses = None,
    link_group = None,
    link_group_map = None,
    link_style = None,
    link_whole = None,
    linker_extra_outputs = None,
    linker_flags = None,
    modular = None,
    module_name = None,
    modulemap_mode = None,
    platform_compiler_flags = None,
    platform_deps = None,
    platform_headers = None,
    platform_linker_flags = None,
    platform_preprocessor_flags = None,
    platform_srcs = None,
    post_linker_flags = None,
    post_platform_linker_flags = None,
    precompiled_header = None,
    preferred_linkage = None,
    prefix_header = None,
    preprocessor_flags = None,
    public_include_directories = None,
    public_system_include_directories = None,
    raw_headers = None,
    reexport_all_header_dependencies = None,
    soname = None,
    srcs = None,
    static_library_basename = None,
    supported_platforms_regex = None,
    supports_merged_linking = None,
    swift_compiler_flags = None,
    swift_version = None,
    target_sdk_version = None,
    tests = None,
    thin_lto = None,
    xcode_private_headers_symlinks = None,
    xcode_public_headers_symlinks = None,
):
    ...
def apple_package (
    bundle,
    name,
    compatible_with = None,
    default_platform = None,
    default_target_platform = None,
    labels = None,
    licenses = None,
    need_android_tools = None,
):
    ...
def apple_resource (
    name,
    codesign_on_copy = None,
    compatible_with = None,
    default_target_platform = None,
    destination = None,
    dirs = None,
    files = None,
    labels = None,
    licenses = None,
    resources_from_deps = None,
    variants = None,
):
    ...
def apple_test (
    info_plist,
    name,
    asset_catalogs_compilation_options = None,
    bridging_header = None,
    can_be_asset = None,
    codesign_flags = None,
    codesign_identity = None,
    compatible_with = None,
    compiler_flags = None,
    configs = None,
    contacts = None,
    cxx_runtime_type = None,
    default_platform = None,
    default_target_platform = None,
    defaults = None,
    deps = None,
    destination_specifier = None,
    entitlements_file = None,
    env = None,
    executable_name = None,
    exported_deps = None,
    exported_header_style = None,
    exported_headers = None,
    exported_lang_platform_preprocessor_flags = None,
    exported_lang_preprocessor_flags = None,
    exported_linker_flags = None,
    exported_platform_deps = None,
    exported_platform_headers = None,
    exported_platform_linker_flags = None,
    exported_platform_preprocessor_flags = None,
    exported_post_linker_flags = None,
    exported_post_platform_linker_flags = None,
    exported_preprocessor_flags = None,
    extra_xcode_files = None,
    extra_xcode_sources = None,
    fat_lto = None,
    force_static = None,
    frameworks = None,
    header_namespace = None,
    header_path_prefix = None,
    headers = None,
    include_directories = None,
    info_plist_substitutions = None,
    is_ui_test = None,
    labels = None,
    lang_compiler_flags = None,
    lang_platform_compiler_flags = None,
    lang_platform_preprocessor_flags = None,
    lang_preprocessor_flags = None,
    libraries = None,
    licenses = None,
    link_group = None,
    link_group_map = None,
    link_style = None,
    link_whole = None,
    linker_extra_outputs = None,
    linker_flags = None,
    modular = None,
    module_name = None,
    modulemap_mode = None,
    platform_compiler_flags = None,
    platform_deps = None,
    platform_headers = None,
    platform_linker_flags = None,
    platform_preprocessor_flags = None,
    platform_srcs = None,
    post_linker_flags = None,
    post_platform_linker_flags = None,
    precompiled_header = None,
    preferred_linkage = None,
    prefix_header = None,
    preprocessor_flags = None,
    public_include_directories = None,
    public_system_include_directories = None,
    raw_headers = None,
    reexport_all_header_dependencies = None,
    run_test_separately = None,
    runner = None,
    snapshot_reference_images_path = None,
    soname = None,
    specs = None,
    srcs = None,
    static_library_basename = None,
    supported_platforms_regex = None,
    supports_merged_linking = None,
    swift_compiler_flags = None,
    swift_version = None,
    target_sdk_version = None,
    test_host_app = None,
    test_rule_timeout_ms = None,
    tests = None,
    thin_lto = None,
    ui_test_target_app = None,
    xcode_private_headers_symlinks = None,
    xcode_product_type = None,
    xcode_public_headers_symlinks = None,
):
    ...
def apple_toolchain (
    actool,
    architecture,
    codesign,
    codesign_allocate,
    cxx_toolchain,
    dsymutil,
    ibtool,
    libtool,
    lipo,
    lldb,
    min_version,
    momc,
    name,
    platform_path,
    sdk_name,
    sdk_path,
    version,
    xcode_build_version,
    xcode_version,
    xctest,
    build_version = None,
    compatible_with = None,
    copy_scene_kit_assets = None,
    default_target_platform = None,
    developer_path = None,
    labels = None,
    licenses = None,
    swift_toolchain = None,
    work_around_dsymutil_lto_stack_overflow_bug = None,
):
    ...
def apple_toolchain_set (
    name,
    apple_toolchains = None,
    compatible_with = None,
    default_target_platform = None,
    labels = None,
    licenses = None,
):
    ...
def cgo_library (
    name,
    cgo_compiler_flags = None,
    compatible_with = None,
    compiler_flags = None,
    cxx_runtime_type = None,
    default_platform = None,
    default_target_platform = None,
    defaults = None,
    deps = None,
    deps_query = None,
    executable_name = None,
    exported_deps = None,
    fat_lto = None,
    frameworks = None,
    go_assembler_flags = None,
    go_compiler_flags = None,
    go_srcs = None,
    header_namespace = None,
    headers = None,
    include_directories = None,
    labels = None,
    lang_compiler_flags = None,
    lang_platform_compiler_flags = None,
    lang_platform_preprocessor_flags = None,
    lang_preprocessor_flags = None,
    libraries = None,
    licenses = None,
    link_deps_query_whole = None,
    link_group = None,
    link_group_map = None,
    link_style = None,
    linker_extra_outputs = None,
    linker_flags = None,
    package_name = None,
    platform_compiler_flags = None,
    platform_deps = None,
    platform_headers = None,
    platform_linker_flags = None,
    platform_preprocessor_flags = None,
    platform_srcs = None,
    post_linker_flags = None,
    post_platform_linker_flags = None,
    precompiled_header = None,
    prefix_header = None,
    preprocessor_flags = None,
    raw_headers = None,
    srcs = None,
    tests = None,
    thin_lto = None,
    version_universe = None,
):
    ...
def command_alias (
    name,
    args = None,
    compatible_with = None,
    default_target_platform = None,
    env = None,
    exe = None,
    labels = None,
    licenses = None,
    platform_exe = None,
):
    ...
def config_setting (
    name,
    constraint_values = None,
    values = None,
):
    ...
def constraint_setting (
    name,
):
    ...
def constraint_value (
    constraint_setting,
    name,
):
    ...
def core_data_model (
    name,
    path,
    compatible_with = None,
    default_target_platform = None,
    labels = None,
    licenses = None,
):
    ...
def csharp_library (
    framework_ver,
    name,
    compatible_with = None,
    compiler_flags = None,
    default_target_platform = None,
    deps = None,
    dll_name = None,
    labels = None,
    licenses = None,
    resources = None,
    srcs = None,
):
    ...
def cxx_binary (
    name,
    compatible_with = None,
    compiler_flags = None,
    cxx_runtime_type = None,
    default_platform = None,
    default_target_platform = None,
    defaults = None,
    deps = None,
    deps_query = None,
    executable_name = None,
    fat_lto = None,
    frameworks = None,
    header_namespace = None,
    headers = None,
    include_directories = None,
    labels = None,
    lang_compiler_flags = None,
    lang_platform_compiler_flags = None,
    lang_platform_preprocessor_flags = None,
    lang_preprocessor_flags = None,
    libraries = None,
    licenses = None,
    link_deps_query_whole = None,
    link_group = None,
    link_group_map = None,
    link_style = None,
    linker_extra_outputs = None,
    linker_flags = None,
    platform_compiler_flags = None,
    platform_deps = None,
    platform_headers = None,
    platform_linker_flags = None,
    platform_preprocessor_flags = None,
    platform_srcs = None,
    post_linker_flags = None,
    post_platform_linker_flags = None,
    precompiled_header = None,
    prefix_header = None,
    preprocessor_flags = None,
    raw_headers = None,
    srcs = None,
    tests = None,
    thin_lto = None,
    version_universe = None,
):
    ...
def cxx_genrule (
    name,
    out,
    bash = None,
    cacheable = None,
    cmd = None,
    cmd_exe = None,
    compatible_with = None,
    default_target_platform = None,
    enable_sandbox = None,
    environment_expansion_separator = None,
    labels = None,
    licenses = None,
    need_android_tools = None,
    remote = None,
    srcs = None,
    tests = None,
    type = None,
):
    ...
def cxx_library (
    name,
    bridging_header = None,
    can_be_asset = None,
    compatible_with = None,
    compiler_flags = None,
    cxx_runtime_type = None,
    default_platform = None,
    default_target_platform = None,
    defaults = None,
    deps = None,
    executable_name = None,
    exported_deps = None,
    exported_header_style = None,
    exported_headers = None,
    exported_lang_platform_preprocessor_flags = None,
    exported_lang_preprocessor_flags = None,
    exported_linker_flags = None,
    exported_platform_deps = None,
    exported_platform_headers = None,
    exported_platform_linker_flags = None,
    exported_platform_preprocessor_flags = None,
    exported_post_linker_flags = None,
    exported_post_platform_linker_flags = None,
    exported_preprocessor_flags = None,
    extra_xcode_files = None,
    extra_xcode_sources = None,
    fat_lto = None,
    force_static = None,
    frameworks = None,
    header_namespace = None,
    headers = None,
    include_directories = None,
    labels = None,
    lang_compiler_flags = None,
    lang_platform_compiler_flags = None,
    lang_platform_preprocessor_flags = None,
    lang_preprocessor_flags = None,
    libraries = None,
    licenses = None,
    link_group = None,
    link_group_map = None,
    link_style = None,
    link_whole = None,
    linker_extra_outputs = None,
    linker_flags = None,
    module_name = None,
    platform_compiler_flags = None,
    platform_deps = None,
    platform_headers = None,
    platform_linker_flags = None,
    platform_preprocessor_flags = None,
    platform_srcs = None,
    post_linker_flags = None,
    post_platform_linker_flags = None,
    precompiled_header = None,
    preferred_linkage = None,
    prefix_header = None,
    preprocessor_flags = None,
    public_include_directories = None,
    public_system_include_directories = None,
    raw_headers = None,
    reexport_all_header_dependencies = None,
    soname = None,
    srcs = None,
    static_library_basename = None,
    supported_platforms_regex = None,
    supports_merged_linking = None,
    tests = None,
    thin_lto = None,
    xcode_private_headers_symlinks = None,
    xcode_public_headers_symlinks = None,
):
    ...
def cxx_lua_extension (
    name,
    base_module = None,
    compatible_with = None,
    compiler_flags = None,
    cxx_runtime_type = None,
    default_platform = None,
    default_target_platform = None,
    defaults = None,
    deps = None,
    executable_name = None,
    frameworks = None,
    header_namespace = None,
    headers = None,
    include_directories = None,
    labels = None,
    lang_compiler_flags = None,
    lang_platform_compiler_flags = None,
    lang_platform_preprocessor_flags = None,
    lang_preprocessor_flags = None,
    libraries = None,
    licenses = None,
    linker_extra_outputs = None,
    linker_flags = None,
    platform_compiler_flags = None,
    platform_deps = None,
    platform_headers = None,
    platform_linker_flags = None,
    platform_preprocessor_flags = None,
    platform_srcs = None,
    post_linker_flags = None,
    post_platform_linker_flags = None,
    precompiled_header = None,
    prefix_header = None,
    preprocessor_flags = None,
    raw_headers = None,
    srcs = None,
    tests = None,
):
    ...
def cxx_precompiled_header (
    name,
    src,
    compatible_with = None,
    default_target_platform = None,
    deps = None,
    labels = None,
    licenses = None,
):
    ...
def cxx_python_extension (
    name,
    base_module = None,
    compatible_with = None,
    compiler_flags = None,
    cxx_runtime_type = None,
    default_platform = None,
    default_target_platform = None,
    defaults = None,
    deps = None,
    executable_name = None,
    frameworks = None,
    header_namespace = None,
    headers = None,
    include_directories = None,
    labels = None,
    lang_compiler_flags = None,
    lang_platform_compiler_flags = None,
    lang_platform_preprocessor_flags = None,
    lang_preprocessor_flags = None,
    libraries = None,
    licenses = None,
    linker_extra_outputs = None,
    linker_flags = None,
    module_name = None,
    platform_compiler_flags = None,
    platform_deps = None,
    platform_headers = None,
    platform_linker_flags = None,
    platform_preprocessor_flags = None,
    platform_srcs = None,
    post_linker_flags = None,
    post_platform_linker_flags = None,
    precompiled_header = None,
    prefix_header = None,
    preprocessor_flags = None,
    raw_headers = None,
    srcs = None,
    tests = None,
):
    ...
def cxx_test (
    name,
    additional_coverage_targets = None,
    args = None,
    compatible_with = None,
    compiler_flags = None,
    contacts = None,
    cxx_runtime_type = None,
    default_platform = None,
    default_target_platform = None,
    defaults = None,
    deps = None,
    deps_query = None,
    env = None,
    executable_name = None,
    fat_lto = None,
    framework = None,
    frameworks = None,
    header_namespace = None,
    headers = None,
    include_directories = None,
    labels = None,
    lang_compiler_flags = None,
    lang_platform_compiler_flags = None,
    lang_platform_preprocessor_flags = None,
    lang_preprocessor_flags = None,
    libraries = None,
    licenses = None,
    link_deps_query_whole = None,
    link_group = None,
    link_group_map = None,
    link_style = None,
    linker_extra_outputs = None,
    linker_flags = None,
    platform_compiler_flags = None,
    platform_deps = None,
    platform_headers = None,
    platform_linker_flags = None,
    platform_preprocessor_flags = None,
    platform_srcs = None,
    post_linker_flags = None,
    post_platform_linker_flags = None,
    precompiled_header = None,
    prefix_header = None,
    preprocessor_flags = None,
    raw_headers = None,
    resources = None,
    run_test_separately = None,
    srcs = None,
    test_rule_timeout_ms = None,
    tests = None,
    thin_lto = None,
    use_default_test_main = None,
    version_universe = None,
):
    ...
def cxx_toolchain (
    archiver,
    archiver_type,
    assembler,
    c_compiler,
    compiler_type,
    cxx_compiler,
    linker,
    linker_type,
    name,
    nm,
    objcopy_for_shared_library_interface,
    object_file_extension,
    shared_library_extension,
    shared_library_interface_type,
    shared_library_versioned_extension_format,
    static_library_extension,
    strip,
    use_header_map,
    archiver_flags = None,
    assembler_flags = None,
    binary_extension = None,
    c_compiler_flags = None,
    compatible_with = None,
    cxx_compiler_flags = None,
    default_target_platform = None,
    filepath_length_limited = None,
    headers_whitelist = None,
    labels = None,
    licenses = None,
    linker_flags = None,
    private_headers_symlinks_enabled = None,
    public_headers_symlinks_enabled = None,
    ranlib = None,
    ranlib_flags = None,
    shared_dep_runtime_ld_flags = None,
    static_dep_runtime_ld_flags = None,
    static_pic_dep_runtime_ld_flags = None,
    strip_flags = None,
    use_arg_file = None,
):
    ...
def d_binary (
    name,
    srcs,
    compatible_with = None,
    default_target_platform = None,
    deps = None,
    labels = None,
    licenses = None,
    linker_flags = None,
):
    ...
def d_library (
    name,
    srcs,
    compatible_with = None,
    default_target_platform = None,
    deps = None,
    labels = None,
    licenses = None,
    linker_flags = None,
):
    ...
def d_test (
    name,
    srcs,
    compatible_with = None,
    contacts = None,
    default_target_platform = None,
    deps = None,
    labels = None,
    licenses = None,
    linker_flags = None,
    test_rule_timeout_ms = None,
):
    ...
def export_file (
    name,
    compatible_with = None,
    default_target_platform = None,
    labels = None,
    licenses = None,
    mode = None,
    out = None,
    src = None,
):
    ...
def external_test_runner (
    binary,
    name,
    compatible_with = None,
    default_target_platform = None,
    labels = None,
    licenses = None,
):
    ...
def filegroup (
    name,
    compatible_with = None,
    default_target_platform = None,
    labels = None,
    licenses = None,
    srcs = None,
):
    ...
def gen_aidl (
    aidl,
    import_path,
    name,
    aidl_srcs = None,
    compatible_with = None,
    default_target_platform = None,
    deps = None,
    labels = None,
    licenses = None,
):
    ...
def genrule (
    name,
    bash = None,
    cacheable = None,
    cmd = None,
    cmd_exe = None,
    compatible_with = None,
    default_target_platform = None,
    enable_sandbox = None,
    environment_expansion_separator = None,
    executable = None,
    labels = None,
    licenses = None,
    need_android_tools = None,
    out = None,
    outs = None,
    remote = None,
    srcs = None,
    tests = None,
    type = None,
):
    ...
def go_binary (
    name,
    assembler_flags = None,
    compatible_with = None,
    compiler_flags = None,
    default_target_platform = None,
    deps = None,
    external_linker_flags = None,
    labels = None,
    licenses = None,
    link_mode = None,
    link_style = None,
    linker_flags = None,
    platform = None,
    resources = None,
    srcs = None,
):
    ...
def go_library (
    name,
    assembler_flags = None,
    compatible_with = None,
    compiler_flags = None,
    default_target_platform = None,
    deps = None,
    exported_deps = None,
    labels = None,
    licenses = None,
    package_name = None,
    srcs = None,
    tests = None,
):
    ...
def go_test (
    name,
    assembler_flags = None,
    compatible_with = None,
    compiler_flags = None,
    contacts = None,
    coverage_mode = None,
    default_target_platform = None,
    deps = None,
    env = None,
    external_linker_flags = None,
    labels = None,
    library = None,
    licenses = None,
    link_mode = None,
    link_style = None,
    linker_flags = None,
    package_name = None,
    platform = None,
    resources = None,
    run_test_separately = None,
    runner = None,
    specs = None,
    srcs = None,
    test_rule_timeout_ms = None,
):
    ...
def go_test_runner (
    name,
    test_runner_generator,
    compatible_with = None,
    default_target_platform = None,
    labels = None,
    licenses = None,
):
    ...
def groovy_library (
    name,
    annotation_processor_deps = None,
    annotation_processor_only = None,
    annotation_processor_params = None,
    annotation_processors = None,
    compatible_with = None,
    compile_against = None,
    compiler = None,
    compiler_class_name = None,
    default_target_platform = None,
    deps = None,
    exported_deps = None,
    exported_provided_deps = None,
    extra_arguments = None,
    extra_groovyc_arguments = None,
    java_plugin_params = None,
    java_version = None,
    javac = None,
    javac_jar = None,
    labels = None,
    licenses = None,
    manifest_file = None,
    maven_coords = None,
    maven_pom_template = None,
    never_mark_as_unused_dependency = None,
    on_unused_dependencies = None,
    plugins = None,
    postprocess_classes_commands = None,
    proguard_config = None,
    provided_deps = None,
    remove_classes = None,
    required_for_source_only_abi = None,
    resources = None,
    resources_root = None,
    runtime_deps = None,
    source = None,
    source_abi_verification_mode = None,
    source_only_abi_deps = None,
    srcs = None,
    target = None,
    tests = None,
    unbundled_resources_root = None,
):
    ...
def groovy_test (
    name,
    annotation_processor_deps = None,
    annotation_processor_only = None,
    annotation_processor_params = None,
    annotation_processors = None,
    compatible_with = None,
    compile_against = None,
    compiler = None,
    compiler_class_name = None,
    contacts = None,
    cxx_library_whitelist = None,
    default_cxx_platform = None,
    default_target_platform = None,
    deps = None,
    env = None,
    exported_deps = None,
    exported_provided_deps = None,
    extra_arguments = None,
    extra_groovyc_arguments = None,
    fork_mode = None,
    java_plugin_params = None,
    java_version = None,
    javac = None,
    javac_jar = None,
    labels = None,
    licenses = None,
    manifest_file = None,
    maven_coords = None,
    maven_pom_template = None,
    never_mark_as_unused_dependency = None,
    on_unused_dependencies = None,
    plugins = None,
    postprocess_classes_commands = None,
    proguard_config = None,
    provided_deps = None,
    remove_classes = None,
    required_for_source_only_abi = None,
    resources = None,
    resources_root = None,
    run_test_separately = None,
    runtime_deps = None,
    source = None,
    source_abi_verification_mode = None,
    source_only_abi_deps = None,
    srcs = None,
    std_err_log_level = None,
    std_out_log_level = None,
    target = None,
    test_case_timeout_ms = None,
    test_rule_timeout_ms = None,
    test_type = None,
    tests = None,
    unbundled_resources_root = None,
    use_cxx_libraries = None,
    vm_args = None,
):
    ...
def gwt_binary (
    name,
    compatible_with = None,
    default_target_platform = None,
    deps = None,
    draft_compile = None,
    experimental_args = None,
    labels = None,
    licenses = None,
    local_workers = None,
    module_deps = None,
    modules = None,
    optimize = None,
    strict = None,
    style = None,
    vm_args = None,
):
    ...
def halide_library (
    name,
    compatible_with = None,
    compiler_deps = None,
    compiler_flags = None,
    compiler_invocation_flags = None,
    configs = None,
    cxx_runtime_type = None,
    default_platform = None,
    default_target_platform = None,
    defaults = None,
    deps = None,
    deps_query = None,
    executable_name = None,
    fat_lto = None,
    frameworks = None,
    function_name = None,
    header_namespace = None,
    headers = None,
    include_directories = None,
    labels = None,
    lang_compiler_flags = None,
    lang_platform_compiler_flags = None,
    lang_platform_preprocessor_flags = None,
    lang_preprocessor_flags = None,
    libraries = None,
    licenses = None,
    link_deps_query_whole = None,
    link_group = None,
    link_group_map = None,
    link_style = None,
    linker_extra_outputs = None,
    linker_flags = None,
    platform_compiler_flags = None,
    platform_deps = None,
    platform_headers = None,
    platform_linker_flags = None,
    platform_preprocessor_flags = None,
    platform_srcs = None,
    post_linker_flags = None,
    post_platform_linker_flags = None,
    precompiled_header = None,
    prefix_header = None,
    preprocessor_flags = None,
    raw_headers = None,
    srcs = None,
    supported_platforms_regex = None,
    tests = None,
    thin_lto = None,
    version_universe = None,
):
    ...
def haskell_binary (
    name,
    compatible_with = None,
    compiler_flags = None,
    default_target_platform = None,
    deps = None,
    deps_query = None,
    enable_profiling = None,
    ghci_platform_preload_deps = None,
    ghci_preload_deps = None,
    labels = None,
    licenses = None,
    link_deps_query_whole = None,
    link_style = None,
    linker_flags = None,
    main = None,
    platform = None,
    platform_deps = None,
    srcs = None,
):
    ...
def haskell_ghci (
    name,
    compatible_with = None,
    compiler_flags = None,
    default_target_platform = None,
    deps = None,
    deps_query = None,
    enable_profiling = None,
    extra_script_templates = None,
    ghci_bin_dep = None,
    ghci_init = None,
    labels = None,
    licenses = None,
    linker_flags = None,
    platform = None,
    platform_deps = None,
    platform_preload_deps = None,
    preload_deps = None,
    srcs = None,
):
    ...
def haskell_haddock (
    name,
    compatible_with = None,
    default_target_platform = None,
    deps = None,
    deps_query = None,
    haddock_flags = None,
    labels = None,
    licenses = None,
    platform = None,
):
    ...
def haskell_library (
    name,
    compatible_with = None,
    compiler_flags = None,
    default_target_platform = None,
    deps = None,
    enable_profiling = None,
    ghci_platform_preload_deps = None,
    ghci_preload_deps = None,
    haddock_flags = None,
    labels = None,
    licenses = None,
    link_whole = None,
    linker_flags = None,
    platform = None,
    platform_deps = None,
    preferred_linkage = None,
    srcs = None,
):
    ...
def haskell_prebuilt_library (
    db,
    name,
    version,
    compatible_with = None,
    cxx_header_dirs = None,
    default_target_platform = None,
    deps = None,
    enable_profiling = None,
    exported_compiler_flags = None,
    exported_linker_flags = None,
    id = None,
    import_dirs = None,
    labels = None,
    licenses = None,
    profiled_static_libs = None,
    shared_libs = None,
    static_libs = None,
):
    ...
def http_archive (
    name,
    sha256,
    compatible_with = None,
    default_target_platform = None,
    labels = None,
    licenses = None,
    out = None,
    strip_prefix = None,
    type = None,
    urls = None,
):
    ...
def http_file (
    name,
    sha256,
    compatible_with = None,
    default_target_platform = None,
    executable = None,
    labels = None,
    licenses = None,
    out = None,
    urls = None,
):
    ...
def jar_genrule (
    name,
    bash = None,
    cacheable = None,
    cmd = None,
    cmd_exe = None,
    compatible_with = None,
    default_target_platform = None,
    enable_sandbox = None,
    environment_expansion_separator = None,
    labels = None,
    licenses = None,
    need_android_tools = None,
    remote = None,
    srcs = None,
    tests = None,
    type = None,
):
    ...
def java_annotation_processor (
    name,
    compatible_with = None,
    default_target_platform = None,
    deps = None,
    does_not_affect_abi = None,
    isolate_class_loader = None,
    labels = None,
    licenses = None,
    processor_class = None,
    processor_classes = None,
    supports_abi_generation_from_source = None,
):
    ...
def java_binary (
    name,
    blacklist = None,
    compatible_with = None,
    default_cxx_platform = None,
    default_target_platform = None,
    deps = None,
    disallow_all_duplicates = None,
    labels = None,
    licenses = None,
    main_class = None,
    manifest_file = None,
    merge_manifests = None,
    meta_inf_directory = None,
    tests = None,
):
    ...
def java_library (
    name,
    abi_generation_mode = None,
    annotation_processor_deps = None,
    annotation_processor_only = None,
    annotation_processor_params = None,
    annotation_processors = None,
    compatible_with = None,
    compile_against = None,
    compiler = None,
    compiler_class_name = None,
    default_target_platform = None,
    deps = None,
    exported_deps = None,
    exported_provided_deps = None,
    extra_arguments = None,
    java_plugin_params = None,
    java_version = None,
    javac = None,
    javac_jar = None,
    labels = None,
    licenses = None,
    manifest_file = None,
    maven_coords = None,
    maven_pom_template = None,
    never_mark_as_unused_dependency = None,
    on_unused_dependencies = None,
    plugins = None,
    postprocess_classes_commands = None,
    proguard_config = None,
    provided_deps = None,
    remove_classes = None,
    required_for_source_only_abi = None,
    resources = None,
    resources_root = None,
    runtime_deps = None,
    source = None,
    source_abi_verification_mode = None,
    source_only_abi_deps = None,
    srcs = None,
    target = None,
    tests = None,
    unbundled_resources_root = None,
):
    ...
def java_plugin (
    name,
    plugin_name,
    compatible_with = None,
    default_target_platform = None,
    deps = None,
    does_not_affect_abi = None,
    isolate_class_loader = None,
    labels = None,
    licenses = None,
    supports_abi_generation_from_source = None,
):
    ...
def java_test (
    name,
    abi_generation_mode = None,
    annotation_processor_deps = None,
    annotation_processor_only = None,
    annotation_processor_params = None,
    annotation_processors = None,
    compatible_with = None,
    compile_against = None,
    compiler = None,
    compiler_class_name = None,
    contacts = None,
    cxx_library_whitelist = None,
    default_cxx_platform = None,
    default_target_platform = None,
    deps = None,
    env = None,
    exported_deps = None,
    exported_provided_deps = None,
    extra_arguments = None,
    fork_mode = None,
    java_plugin_params = None,
    java_version = None,
    javac = None,
    javac_jar = None,
    labels = None,
    licenses = None,
    manifest_file = None,
    maven_coords = None,
    maven_pom_template = None,
    never_mark_as_unused_dependency = None,
    on_unused_dependencies = None,
    plugins = None,
    postprocess_classes_commands = None,
    proguard_config = None,
    provided_deps = None,
    remove_classes = None,
    required_for_source_only_abi = None,
    resources = None,
    resources_root = None,
    run_test_separately = None,
    runner = None,
    runtime_deps = None,
    source = None,
    source_abi_verification_mode = None,
    source_only_abi_deps = None,
    specs = None,
    srcs = None,
    std_err_log_level = None,
    std_out_log_level = None,
    target = None,
    test_case_timeout_ms = None,
    test_rule_timeout_ms = None,
    test_type = None,
    tests = None,
    unbundled_resources_root = None,
    use_cxx_libraries = None,
    vm_args = None,
):
    ...
def java_test_runner (
    main_class,
    name,
    abi_generation_mode = None,
    annotation_processor_deps = None,
    annotation_processor_only = None,
    annotation_processor_params = None,
    annotation_processors = None,
    compatible_with = None,
    compile_against = None,
    compiler = None,
    compiler_class_name = None,
    default_target_platform = None,
    deps = None,
    exported_deps = None,
    exported_provided_deps = None,
    extra_arguments = None,
    java_plugin_params = None,
    java_version = None,
    javac = None,
    javac_jar = None,
    labels = None,
    licenses = None,
    manifest_file = None,
    maven_coords = None,
    maven_pom_template = None,
    never_mark_as_unused_dependency = None,
    on_unused_dependencies = None,
    plugins = None,
    postprocess_classes_commands = None,
    proguard_config = None,
    provided_deps = None,
    remove_classes = None,
    required_for_source_only_abi = None,
    resources = None,
    resources_root = None,
    runtime_deps = None,
    source = None,
    source_abi_verification_mode = None,
    source_only_abi_deps = None,
    srcs = None,
    target = None,
    tests = None,
    unbundled_resources_root = None,
):
    ...
def js_bundle (
    entry,
    name,
    worker,
    android_package = None,
    bundle_name = None,
    bundle_name_for_flavor = None,
    compatible_with = None,
    default_target_platform = None,
    deps = None,
    extra_json = None,
    labels = None,
    licenses = None,
):
    ...
def js_bundle_genrule (
    js_bundle,
    name,
    bash = None,
    bundle_name = None,
    bundle_name_for_flavor = None,
    cacheable = None,
    cmd = None,
    cmd_exe = None,
    compatible_with = None,
    default_target_platform = None,
    enable_sandbox = None,
    environment_expansion_separator = None,
    labels = None,
    licenses = None,
    need_android_tools = None,
    remote = None,
    rewrite_deps_file = None,
    rewrite_misc = None,
    rewrite_sourcemap = None,
    skip_resources = None,
    srcs = None,
    tests = None,
):
    ...
def js_library (
    name,
    worker,
    base_path = None,
    compatible_with = None,
    default_target_platform = None,
    deps = None,
    deps_query = None,
    extra_json = None,
    labels = None,
    licenses = None,
    srcs = None,
    tests = None,
):
    ...
def keystore (
    name,
    properties,
    store,
    compatible_with = None,
    default_target_platform = None,
    deps = None,
    labels = None,
    licenses = None,
):
    ...
def kotlin_library (
    name,
    abi_generation_mode = None,
    annotation_processing_tool = None,
    annotation_processor_deps = None,
    annotation_processor_only = None,
    annotation_processor_params = None,
    annotation_processors = None,
    compatible_with = None,
    compile_against = None,
    compiler = None,
    compiler_class_name = None,
    default_target_platform = None,
    deps = None,
    exported_deps = None,
    exported_provided_deps = None,
    extra_arguments = None,
    extra_kotlinc_arguments = None,
    friend_paths = None,
    java_plugin_params = None,
    java_version = None,
    javac = None,
    javac_jar = None,
    kapt_ap_options = None,
    kotlinc_plugins = None,
    labels = None,
    licenses = None,
    manifest_file = None,
    maven_coords = None,
    maven_pom_template = None,
    never_mark_as_unused_dependency = None,
    on_unused_dependencies = None,
    plugins = None,
    postprocess_classes_commands = None,
    proguard_config = None,
    provided_deps = None,
    remove_classes = None,
    required_for_source_only_abi = None,
    resources = None,
    resources_root = None,
    runtime_deps = None,
    source = None,
    source_abi_verification_mode = None,
    source_only_abi_deps = None,
    srcs = None,
    target = None,
    tests = None,
    unbundled_resources_root = None,
):
    ...
def kotlin_test (
    name,
    abi_generation_mode = None,
    annotation_processing_tool = None,
    annotation_processor_deps = None,
    annotation_processor_only = None,
    annotation_processor_params = None,
    annotation_processors = None,
    compatible_with = None,
    compile_against = None,
    compiler = None,
    compiler_class_name = None,
    contacts = None,
    cxx_library_whitelist = None,
    default_cxx_platform = None,
    default_target_platform = None,
    deps = None,
    env = None,
    exported_deps = None,
    exported_provided_deps = None,
    extra_arguments = None,
    extra_kotlinc_arguments = None,
    fork_mode = None,
    friend_paths = None,
    java_plugin_params = None,
    java_version = None,
    javac = None,
    javac_jar = None,
    kapt_ap_options = None,
    kotlinc_plugins = None,
    labels = None,
    licenses = None,
    manifest_file = None,
    maven_coords = None,
    maven_pom_template = None,
    never_mark_as_unused_dependency = None,
    on_unused_dependencies = None,
    plugins = None,
    postprocess_classes_commands = None,
    proguard_config = None,
    provided_deps = None,
    remove_classes = None,
    required_for_source_only_abi = None,
    resources = None,
    resources_root = None,
    run_test_separately = None,
    runtime_deps = None,
    source = None,
    source_abi_verification_mode = None,
    source_only_abi_deps = None,
    srcs = None,
    std_err_log_level = None,
    std_out_log_level = None,
    target = None,
    test_case_timeout_ms = None,
    test_rule_timeout_ms = None,
    test_type = None,
    tests = None,
    unbundled_resources_root = None,
    use_cxx_libraries = None,
    vm_args = None,
):
    ...
def legacy_toolchain (
    name,
    toolchain_name,
    compatible_with = None,
    default_target_platform = None,
    labels = None,
    licenses = None,
):
    ...
def lua_binary (
    main_module,
    name,
    compatible_with = None,
    default_target_platform = None,
    deps = None,
    labels = None,
    licenses = None,
    native_starter_library = None,
    package_style = None,
    platform = None,
    platform_deps = None,
    python_platform = None,
):
    ...
def lua_library (
    name,
    base_module = None,
    compatible_with = None,
    default_target_platform = None,
    deps = None,
    labels = None,
    licenses = None,
    platform_deps = None,
    srcs = None,
):
    ...
def ndk_library (
    name,
    compatible_with = None,
    default_target_platform = None,
    deps = None,
    flags = None,
    is_asset = None,
    labels = None,
    licenses = None,
    srcs = None,
):
    ...
def ndk_toolchain (
    cxx_runtime,
    cxx_toolchain,
    name,
    objdump,
    compatible_with = None,
    default_target_platform = None,
    labels = None,
    licenses = None,
    ndk_path = None,
    shared_runtime_path = None,
):
    ...
def ocaml_binary (
    name,
    bytecode_only = None,
    compatible_with = None,
    compiler_flags = None,
    default_target_platform = None,
    deps = None,
    labels = None,
    licenses = None,
    linker_flags = None,
    ocamldep_flags = None,
    platform = None,
    platform_deps = None,
    srcs = None,
    warnings_flags = None,
):
    ...
def ocaml_library (
    name,
    bytecode_only = None,
    compatible_with = None,
    compiler_flags = None,
    default_target_platform = None,
    deps = None,
    labels = None,
    licenses = None,
    linker_flags = None,
    native_plugin = None,
    ocamldep_flags = None,
    platform_deps = None,
    srcs = None,
    warnings_flags = None,
):
    ...
def platform (
    name,
    constraint_values = None,
    deps = None,
):
    ...
def prebuilt_apple_framework (
    framework,
    name,
    preferred_linkage,
    code_sign_on_copy = None,
    compatible_with = None,
    default_target_platform = None,
    deps = None,
    exported_linker_flags = None,
    exported_platform_linker_flags = None,
    frameworks = None,
    labels = None,
    libraries = None,
    licenses = None,
    supported_platforms_regex = None,
):
    ...
def prebuilt_cxx_library (
    name,
    can_be_asset = None,
    compatible_with = None,
    default_target_platform = None,
    deps = None,
    exported_deps = None,
    exported_headers = None,
    exported_lang_platform_preprocessor_flags = None,
    exported_lang_preprocessor_flags = None,
    exported_linker_flags = None,
    exported_platform_deps = None,
    exported_platform_headers = None,
    exported_platform_linker_flags = None,
    exported_platform_preprocessor_flags = None,
    exported_post_linker_flags = None,
    exported_post_platform_linker_flags = None,
    exported_preprocessor_flags = None,
    force_static = None,
    frameworks = None,
    header_dirs = None,
    header_namespace = None,
    header_only = None,
    import_lib = None,
    labels = None,
    libraries = None,
    licenses = None,
    link_whole = None,
    link_without_soname = None,
    platform_header_dirs = None,
    platform_import_lib = None,
    platform_shared_lib = None,
    platform_static_lib = None,
    platform_static_pic_lib = None,
    preferred_linkage = None,
    provided = None,
    shared_lib = None,
    soname = None,
    static_lib = None,
    static_pic_lib = None,
    supported_platforms_regex = None,
    supports_merged_linking = None,
    supports_shared_library_interface = None,
    versioned_exported_lang_platform_preprocessor_flags = None,
    versioned_exported_lang_preprocessor_flags = None,
    versioned_exported_platform_preprocessor_flags = None,
    versioned_exported_preprocessor_flags = None,
    versioned_header_dirs = None,
    versioned_import_lib = None,
    versioned_shared_lib = None,
    versioned_static_lib = None,
    versioned_static_pic_lib = None,
):
    ...
def prebuilt_cxx_library_group (
    name,
    compatible_with = None,
    default_target_platform = None,
    deps = None,
    exported_deps = None,
    exported_platform_deps = None,
    exported_preprocessor_flags = None,
    import_libs = None,
    include_dirs = None,
    labels = None,
    licenses = None,
    provided_shared_libs = None,
    shared_libs = None,
    shared_link = None,
    static_libs = None,
    static_link = None,
    static_pic_libs = None,
    static_pic_link = None,
    supported_platforms_regex = None,
):
    ...
def prebuilt_dotnet_library (
    assembly,
    name,
    compatible_with = None,
    default_target_platform = None,
    labels = None,
    licenses = None,
):
    ...
def prebuilt_go_library (
    library,
    name,
    compatible_with = None,
    default_target_platform = None,
    deps = None,
    exported_deps = None,
    labels = None,
    licenses = None,
    package_name = None,
):
    ...
def prebuilt_jar (
    binary_jar,
    name,
    compatible_with = None,
    default_target_platform = None,
    deps = None,
    generate_abi = None,
    gwt_jar = None,
    javadoc_url = None,
    labels = None,
    licenses = None,
    maven_coords = None,
    never_mark_as_unused_dependency = None,
    provided = None,
    required_for_source_only_abi = None,
    source_jar = None,
):
    ...
def prebuilt_native_library (
    name,
    native_libs,
    compatible_with = None,
    default_target_platform = None,
    deps = None,
    is_asset = None,
    labels = None,
    licenses = None,
):
    ...
def prebuilt_ocaml_library (
    name,
    bytecode_c_libs = None,
    bytecode_lib = None,
    bytecode_only = None,
    c_libs = None,
    compatible_with = None,
    default_target_platform = None,
    deps = None,
    include_dir = None,
    labels = None,
    lib_dir = None,
    lib_name = None,
    licenses = None,
    native_c_libs = None,
    native_lib = None,
    platform_deps = None,
):
    ...
def prebuilt_python_library (
    binary_src,
    name,
    compatible_with = None,
    compile = None,
    default_target_platform = None,
    deps = None,
    exclude_deps_from_merged_linking = None,
    ignore_compile_errors = None,
    labels = None,
    licenses = None,
):
    ...
def prebuilt_rust_library (
    name,
    rlib,
    compatible_with = None,
    crate = None,
    default_target_platform = None,
    deps = None,
    labels = None,
    licenses = None,
    link_style = None,
    platform_deps = None,
    proc_macro = None,
):
    ...
def python_binary (
    name,
    base_module = None,
    build_args = None,
    compatible_with = None,
    compile = None,
    cxx_platform = None,
    default_target_platform = None,
    deps = None,
    extension = None,
    labels = None,
    licenses = None,
    linker_flags = None,
    main = None,
    main_module = None,
    package_style = None,
    platform = None,
    platform_deps = None,
    preload_deps = None,
    tests = None,
    version_universe = None,
    zip_safe = None,
):
    ...
def python_library (
    name,
    base_module = None,
    compatible_with = None,
    default_target_platform = None,
    deps = None,
    exclude_deps_from_merged_linking = None,
    labels = None,
    licenses = None,
    platform_deps = None,
    platform_resources = None,
    platform_srcs = None,
    resources = None,
    srcs = None,
    tests = None,
    versioned_resources = None,
    versioned_srcs = None,
    zip_safe = None,
):
    ...
def python_test (
    name,
    additional_coverage_targets = None,
    base_module = None,
    build_args = None,
    compatible_with = None,
    compile = None,
    contacts = None,
    cxx_platform = None,
    default_target_platform = None,
    deps = None,
    env = None,
    exclude_deps_from_merged_linking = None,
    extension = None,
    labels = None,
    licenses = None,
    linker_flags = None,
    main_module = None,
    needed_coverage = None,
    package_style = None,
    platform = None,
    platform_deps = None,
    platform_resources = None,
    platform_srcs = None,
    preload_deps = None,
    resources = None,
    runner = None,
    specs = None,
    srcs = None,
    test_rule_timeout_ms = None,
    tests = None,
    version_universe = None,
    versioned_resources = None,
    versioned_srcs = None,
    zip_safe = None,
):
    ...
def python_test_runner (
    main_module,
    name,
    src,
    compatible_with = None,
    default_target_platform = None,
    labels = None,
    licenses = None,
):
    ...
def remote_file (
    name,
    sha1,
    url,
    compatible_with = None,
    default_target_platform = None,
    labels = None,
    licenses = None,
    out = None,
    type = None,
):
    ...
def robolectric_test (
    name,
    abi_generation_mode = None,
    annotation_processing_tool = None,
    annotation_processor_deps = None,
    annotation_processor_only = None,
    annotation_processor_params = None,
    annotation_processors = None,
    compatible_with = None,
    compile_against = None,
    compiler = None,
    compiler_class_name = None,
    contacts = None,
    cxx_library_whitelist = None,
    default_cxx_platform = None,
    default_target_platform = None,
    deps = None,
    env = None,
    exported_deps = None,
    exported_provided_deps = None,
    extra_arguments = None,
    extra_kotlinc_arguments = None,
    force_final_resource_ids = None,
    fork_mode = None,
    friend_paths = None,
    java_plugin_params = None,
    java_version = None,
    javac = None,
    javac_jar = None,
    kapt_ap_options = None,
    kotlinc_plugins = None,
    labels = None,
    language = None,
    licenses = None,
    manifest_file = None,
    maven_coords = None,
    maven_pom_template = None,
    never_mark_as_unused_dependency = None,
    on_unused_dependencies = None,
    plugins = None,
    postprocess_classes_commands = None,
    proguard_config = None,
    provided_deps = None,
    remove_classes = None,
    required_for_source_only_abi = None,
    resource_union_package = None,
    resources = None,
    resources_root = None,
    robolectric_manifest = None,
    robolectric_runtime_dependency = None,
    run_test_separately = None,
    runner = None,
    runtime_deps = None,
    source = None,
    source_abi_verification_mode = None,
    source_only_abi_deps = None,
    specs = None,
    srcs = None,
    std_err_log_level = None,
    std_out_log_level = None,
    target = None,
    test_case_timeout_ms = None,
    test_rule_timeout_ms = None,
    test_type = None,
    tests = None,
    unbundled_resources_root = None,
    use_binary_resources = None,
    use_cxx_libraries = None,
    use_old_styleable_format = None,
    vm_args = None,
):
    ...
def rust_binary (
    name,
    compatible_with = None,
    crate = None,
    crate_root = None,
    default_platform = None,
    default_target_platform = None,
    deps = None,
    edition = None,
    env = None,
    features = None,
    labels = None,
    licenses = None,
    link_style = None,
    linker_flags = None,
    mapped_srcs = None,
    named_deps = None,
    platform_deps = None,
    rpath = None,
    rustc_flags = None,
    srcs = None,
    tests = None,
    version_universe = None,
):
    ...
def rust_library (
    name,
    compatible_with = None,
    crate = None,
    crate_root = None,
    default_platform = None,
    default_target_platform = None,
    deps = None,
    edition = None,
    env = None,
    features = None,
    labels = None,
    licenses = None,
    mapped_srcs = None,
    named_deps = None,
    platform_deps = None,
    preferred_linkage = None,
    proc_macro = None,
    rustc_flags = None,
    srcs = None,
    tests = None,
):
    ...
def rust_test (
    name,
    compatible_with = None,
    contacts = None,
    crate = None,
    crate_root = None,
    default_platform = None,
    default_target_platform = None,
    deps = None,
    edition = None,
    env = None,
    features = None,
    framework = None,
    labels = None,
    licenses = None,
    link_style = None,
    linker_flags = None,
    mapped_srcs = None,
    named_deps = None,
    platform_deps = None,
    rpath = None,
    rustc_flags = None,
    srcs = None,
    version_universe = None,
):
    ...
def scala_library (
    name,
    abi_generation_mode = None,
    annotation_processor_deps = None,
    annotation_processor_only = None,
    annotation_processor_params = None,
    annotation_processors = None,
    compatible_with = None,
    compile_against = None,
    compiler = None,
    compiler_class_name = None,
    default_target_platform = None,
    deps = None,
    exported_deps = None,
    exported_provided_deps = None,
    extra_arguments = None,
    java_plugin_params = None,
    java_version = None,
    javac = None,
    javac_jar = None,
    labels = None,
    licenses = None,
    manifest_file = None,
    maven_coords = None,
    maven_pom_template = None,
    never_mark_as_unused_dependency = None,
    on_unused_dependencies = None,
    plugins = None,
    postprocess_classes_commands = None,
    proguard_config = None,
    provided_deps = None,
    remove_classes = None,
    required_for_source_only_abi = None,
    resources = None,
    resources_root = None,
    runtime_deps = None,
    source = None,
    source_abi_verification_mode = None,
    source_only_abi_deps = None,
    srcs = None,
    target = None,
    tests = None,
    unbundled_resources_root = None,
):
    ...
def scala_test (
    name,
    abi_generation_mode = None,
    annotation_processor_deps = None,
    annotation_processor_only = None,
    annotation_processor_params = None,
    annotation_processors = None,
    compatible_with = None,
    compile_against = None,
    compiler = None,
    compiler_class_name = None,
    contacts = None,
    cxx_library_whitelist = None,
    default_cxx_platform = None,
    default_target_platform = None,
    deps = None,
    env = None,
    exported_deps = None,
    exported_provided_deps = None,
    extra_arguments = None,
    fork_mode = None,
    java_plugin_params = None,
    java_version = None,
    javac = None,
    javac_jar = None,
    labels = None,
    licenses = None,
    manifest_file = None,
    maven_coords = None,
    maven_pom_template = None,
    never_mark_as_unused_dependency = None,
    on_unused_dependencies = None,
    plugins = None,
    postprocess_classes_commands = None,
    proguard_config = None,
    provided_deps = None,
    remove_classes = None,
    required_for_source_only_abi = None,
    resources = None,
    resources_root = None,
    run_test_separately = None,
    runtime_deps = None,
    source = None,
    source_abi_verification_mode = None,
    source_only_abi_deps = None,
    srcs = None,
    std_err_log_level = None,
    std_out_log_level = None,
    target = None,
    test_case_timeout_ms = None,
    test_rule_timeout_ms = None,
    test_type = None,
    tests = None,
    unbundled_resources_root = None,
    use_cxx_libraries = None,
    vm_args = None,
):
    ...
def scene_kit_assets (
    name,
    path,
    compatible_with = None,
    default_target_platform = None,
    labels = None,
    licenses = None,
):
    ...
def sh_binary (
    main,
    name,
    compatible_with = None,
    default_target_platform = None,
    deps = None,
    labels = None,
    licenses = None,
    resources = None,
    tests = None,
):
    ...
def sh_test (
    name,
    args = None,
    compatible_with = None,
    contacts = None,
    default_target_platform = None,
    deps = None,
    env = None,
    labels = None,
    licenses = None,
    resources = None,
    run_test_separately = None,
    test = None,
    test_rule_timeout_ms = None,
    type = None,
):
    ...
def swift_library (
    name,
    bridging_header = None,
    compatible_with = None,
    compiler_flags = None,
    default_target_platform = None,
    deps = None,
    enable_objc_interop = None,
    frameworks = None,
    labels = None,
    libraries = None,
    licenses = None,
    module_name = None,
    preferred_linkage = None,
    soname = None,
    srcs = None,
    supported_platforms_regex = None,
    target_sdk_version = None,
    version = None,
):
    ...
def swift_toolchain (
    name,
    swiftc,
    compatible_with = None,
    default_target_platform = None,
    labels = None,
    licenses = None,
    runtime_paths_for_bundling = None,
    runtime_paths_for_linking = None,
    runtime_run_paths = None,
    static_runtime_paths = None,
    swift_stdlib_tool = None,
    swift_stdlib_tool_flags = None,
    swiftc_flags = None,
):
    ...
def test_suite (
    name,
    compatible_with = None,
    default_target_platform = None,
    labels = None,
    licenses = None,
    tests = None,
):
    ...
def versioned_alias (
    name,
    compatible_with = None,
    default_target_platform = None,
    labels = None,
    licenses = None,
    versions = None,
):
    ...
def worker_tool (
    name,
    args = None,
    compatible_with = None,
    default_target_platform = None,
    env = None,
    exe = None,
    labels = None,
    licenses = None,
    max_workers = None,
    max_workers_per_thread_percent = None,
    persistent = None,
):
    ...
def xcode_postbuild_script (
    cmd,
    name,
    compatible_with = None,
    default_target_platform = None,
    input_file_lists = None,
    inputs = None,
    labels = None,
    licenses = None,
    output_file_lists = None,
    outputs = None,
    srcs = None,
):
    ...
def xcode_prebuild_script (
    cmd,
    name,
    compatible_with = None,
    default_target_platform = None,
    input_file_lists = None,
    inputs = None,
    labels = None,
    licenses = None,
    output_file_lists = None,
    outputs = None,
    srcs = None,
):
    ...
def xcode_workspace_config (
    name,
    action_config_names = None,
    additional_scheme_actions = None,
    compatible_with = None,
    default_target_platform = None,
    environment_variables = None,
    expand_variables_based_on = None,
    explicit_runnable_path = None,
    extra_schemes = None,
    extra_shallow_targets = None,
    extra_targets = None,
    extra_tests = None,
    is_remote_runnable = None,
    labels = None,
    launch_style = None,
    licenses = None,
    notification_payload_file = None,
    src_target = None,
    was_created_for_app_extension = None,
    watch_interface = None,
    workspace_name = None,
):
    ...
def zip_file (
    name,
    compatible_with = None,
    default_target_platform = None,
    entries_to_exclude = None,
    labels = None,
    licenses = None,
    on_duplicate_entry = None,
    out = None,
    srcs = None,
    zip_srcs = None,
):
    ...
